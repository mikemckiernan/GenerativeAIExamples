apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.query.name }}
  labels:
    app.kubernetes.io/name: query-router
spec:
  replicas: {{ .Values.query.replicas | default 1 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: query-router
  template:
    metadata:
      labels:
        app.kubernetes.io/name: query-router
    spec:
      {{- if .Values.imagePullSecret.name }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret.name }}
      {{- end }}
      containers:
      - name: query-router
        imagePullPolicy: IfNotPresent
        image:  {{ .Values.query.image }}
        command:
        - uvicorn
        - RetrievalAugmentedGeneration.common.server:app
        - --port
        - {{ .Values.query.service.targetPort | quote }}
        - --host
        - "0.0.0.0"
        env:
          - name: APP_LLM_MODELNAME
            value: {{ .Values.query.env.APP_LLM_MODELNAME | quote }}
          - name: APP_LLM_SERVERURL
            value: {{ .Values.query.env.APP_LLM_SERVERURL | quote }}
          - name: APP_LLM_MODELENGINE
            value: {{ .Values.query.env.APP_LLM_MODELENGINE | quote }}
          - name: APP_EMBEDDINGS_MODELNAME
            value: {{ .Values.query.env.APP_EMBEDDINGS_MODELNAME | quote }}
          - name: APP_EMBEDDINGS_MODELENGINE
            value: {{ .Values.query.env.APP_EMBEDDINGS_MODELENGINE | quote }}
          - name: APP_CONFIG_FILE
            value: {{ .Values.query.env.APP_CONFIG_FILE | quote }}
          - name: APP_PROMPTS_CHATTEMPLATE
            value: {{ .Values.query.env.APP_PROMPTS_CHATTEMPLATE | quote }}
          - name: APP_PROMPTS_RAGTEMPLATE
            value: {{ .Values.query.env.APP_PROMPTS_RAGTEMPLATE | quote }}
          - name: CSV_NAME
            value: {{ .Values.query.env.CSV_NAME | quote }}
          - name: NVIDIA_API_KEY
            valueFrom:
              secretKeyRef:
                name: nv-ai-foundation-secret
                key: NVIDIA_API_KEY
          - name: POSTGRES_PASSWORD
            value: {{ .Values.query.env.POSTGRES_PASSWORD | quote }}
          - name: POSTGRES_USER
            value: {{ .Values.query.env.POSTGRES_USER | quote }}
          - name: POSTGRES_DB
            value: {{ .Values.query.env.POSTGRES_DB | quote }}
          - name: COLLECTION_NAME
            value: {{ .Values.query.env.COLLECTION_NAME | quote }}
          - name: APP_VECTORSTORE_URL
            value: {{ .Values.query.env.APP_VECTORSTORE_URL | quote }}
          - name: APP_VECTORSTORE_NAME
            value: {{ .Values.query.env.APP_VECTORSTORE_NAME | quote }}
          - name: APP_RETRIEVER_TOPK
            value: {{ .Values.query.env.APP_RETRIEVER_TOPK | quote }}
          - name: APP_RETRIEVER_SCORETHRESHOLD
            value: {{ .Values.query.env.APP_RETRIEVER_SCORETHRESHOLD | quote }}
        ports:
        - name: http
          containerPort: {{ .Values.query.service.targetPort }}
          protocol: TCP
        volumeMounts:
          - mountPath: /dev/shm
            name: dshm
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      {{- with .Values.query.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.query.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.query.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: dshm
        emptyDir:
          medium: Memory

---
apiVersion: v1
kind: Service
metadata:
  name:  {{ .Values.query.name }}
spec:
  type: {{ .Values.query.service.type }}
  selector:
    app.kubernetes.io/name: query-router
{{- with .Values.query.service.ports }}
  ports:
  {{- toYaml . | nindent 4 }}
{{- end }}
